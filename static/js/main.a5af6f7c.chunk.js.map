{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setFilter","onChange","event","target","value","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","el","filter","TodoList","filteredTodos","Footer","theme","setTheme","nextTheme","localStorage","clear","setTimeout","window","location","reload","App","useState","setfilteredTodos","useEffect","todosLocal","getItem","setItem","JSON","stringify","parse","bodyStyle","document","getElementById","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a5af6f7c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = ({inputText, setInputText, todos, setTodos, setFilter}) => {\r\n    const inputTextHandler = (event) => {\r\n        setInputText(event.target.value);\r\n    }\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        setTodos([\r\n            ...todos, {text: inputText, completed: false, id: Math.random()*1000}\r\n        ]);\r\n        setInputText(\"\");\r\n    }\r\n    const filterHandler = (event) => {\r\n        setFilter(event.target.value);\r\n    }\r\n    return (\r\n        <form>\r\n            <input onChange={inputTextHandler} value={inputText} type=\"text\" className=\"todo-input\" />\r\n            <button onClick={submitHandler} className=\"todo-button\" type=\"submit\">\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={filterHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"done\">Done</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n               </select>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Todo = ({id, text, todos, todo, setTodos}) => {\r\n    // Deleting and completing\r\n    const handleDelete = () => {\r\n        setTodos(todos.filter(el => el.id !== id));\r\n    };\r\n    const handleCompleted = () => {\r\n        setTodos(todos.map(el => {\r\n            if (el.id === id){\r\n                return {\r\n                    ...el, \r\n                    completed : !el.completed\r\n                };\r\n            };\r\n            return el;\r\n        }));\r\n    };\r\n    return (\r\n        <div className='todo'>\r\n            <li className={`todo-item ${todo.completed? 'completed-elements' : ''}`}>{text}</li>\r\n            <button onClick={handleCompleted} className='completed-btn'>\r\n                <i className='fas fa-check'></i>\r\n            </button>\r\n            <button onClick={handleDelete} className='trash-btn'>\r\n                <i className='fas fa-trash'></i>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todo;","import React from 'react';\r\n\r\n// Components\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = ({todos, setTodos, filteredTodos}) => {\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\" >\r\n                {filteredTodos.filter(todo => todo.text !== '').map(\r\n                    todo => <Todo key={todo.id} text={todo.text} \r\n                    todos={todos} id={todo.id} todo={todo} setTodos={setTodos}/>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nconst Footer = ({theme, setTheme}) => {\r\n    // Utility functions\r\n    const clearLocalStorage = () => {\r\n        localStorage.clear();\r\n        setTimeout(() => { \r\n            window.location.reload(\"true\");\r\n        }, 0);\r\n    }\r\n    const changeTheme = (event) => {\r\n        event.preventDefault();\r\n        if (theme === 'Dark'){\r\n            setTheme('Colorful');\r\n        }\r\n        else{\r\n            setTheme('Dark');\r\n        }\r\n    };\r\n\r\n    let nextTheme = (theme === \"Dark\" ? \"Colorful\" : \"Dark\");\r\n\r\n    return(\r\n        <div className='footer'>\r\n            <button onClick={clearLocalStorage} className='clear-all'>\r\n                CLEAR\r\n            </button>\r\n            <button onClick={changeTheme} className={`${nextTheme === \"Dark\" ? 'theme-selector-dark' : 'theme-selector-colorful'}`}>\r\n                {nextTheme}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer; ","import React, {useState, useEffect} from 'react';\nimport './App.css';\n\n// Components\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\nimport Footer from './components/Footer';\n\nfunction App() {\n\n  // States\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [filteredTodos, setfilteredTodos] = useState([]);\n  const [theme, setTheme] = useState(\"Dark\");\n  \n  // Filtering function\n  const filteringHandler = () => {\n    switch (filter){\n      case \"done\":\n        setfilteredTodos(todos.filter(el => el.completed === true));\n        break;\n      case \"uncompleted\":\n        setfilteredTodos(todos.filter(el => el.completed === false));\n        break;\n      default:\n        setfilteredTodos(todos);\n        break;\n    };\n  };\n  useEffect(filteringHandler, [todos, filter]);\n\n  // Saving todos to localStorage\n  const saveLocalStorage = () => {\n    localStorage.setItem(\"todosData\", JSON.stringify(todos));\n  };\n  // Getting todos from localStorage and parsing them in a string\n  const getLocalTodos = () => {\n    let todosLocal;\n    if (localStorage.getItem(\"todosData\") === null){\n      localStorage.setItem(\"todosData\", JSON.stringify([]));\n      todosLocal = localStorage.getItem(\"todosData\");\n    }\n    else{\n      todosLocal = localStorage.getItem(\"todosData\");\n    }\n    setTodos(JSON.parse(todosLocal));\n  };\n\n  // Saving theme to localStorage\n  const saveThemeLocal = () => {\n    localStorage.setItem('theme', theme);\n  };\n\n  // Setting the theme to the one in localStorage\n  const setLocalTheme = () => {\n    if (localStorage.getItem('theme') === null){\n      setTheme(\"Dark\");\n    }\n    else{\n      setTheme(localStorage.getItem('theme'));\n    }\n  }; \n\n  // Setting the body class depending on the theme\n  const setBodyClass = () => {\n    let bodyStyle = document.getElementById(\"body\");\n    if (theme === \"Dark\"){\n      bodyStyle.className = \"App-dark\";\n    }\n    else{\n      bodyStyle.className = \"App-colorful\";\n    }\n  };\n\n  // Calling getLocalTodos on page load\n  useEffect(getLocalTodos, []);\n\n  // Calling saveLocalStorage each time a state is updated\n  useEffect(saveLocalStorage, [todos, filter]);\n\n  // Calling setLocalTheme on load\n  useEffect(setLocalTheme, []);\n\n  // Calling saveThemeLocal and setBodyClass ech time the theme is changed\n  useEffect(saveThemeLocal, [theme]);\n  useEffect(setBodyClass, [theme]);\n \n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Simple To-Do App</h1>\n      </header>\n      <Form inputText={inputText} setInputText={setInputText} todos={todos} setTodos={setTodos} setFilter={setFilter} />\n      <TodoList todos={todos} setTodos={setTodos} filteredTodos={filteredTodos} />\n      <Footer theme={theme} setTheme={setTheme} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}